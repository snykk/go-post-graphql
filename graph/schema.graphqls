type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
  comments: [Comment!]
}

type Comment {
  id: ID!
  text: String!
  post: Post!
  author: User!
}

input NewUserInput {
  name: String!
  email: String!
}

input NewPostInput {
  title: String!
  content: String!
  authorID: ID!
}

input NewCommentInput {
  text: String!
  postID: ID!
  authorID: ID!
}

type Query {
  getUsers: [User!]
  getPosts: [Post!]
  getComments: [Comment!]

  getUserByID(id: ID!): User
  getUserByEmail(email: String!): User
  getPostByID(id: ID!): Post
  getCommentByID(id: ID!): Comment

  getCommentsByPostID(postID: ID!): [Comment!]
  getCommentsByAuthorID(authorID: ID!): [Comment!]
  getPostsByAuthorID(authorID: ID!): [Post!]
}

type Mutation {
  createUser(input: NewUserInput!): User!
  createPost(input: NewPostInput!): Post!
  createComment(input: NewCommentInput!): Comment!
}
